import base64

body='RGVsaXZlcmVkLVRvOiBjc3NzLndlYnNpdGVAZ21haWwuY29tClJlY2VpdmVkOiBieSAxMC4yMjMuMTQ4Ljk4IHdpdGggU01UUCBpZCA4OWNzcDE1MjQ1NzF3cnE7CiAgICAgICAgVHVlLCAxMyBNYXIgMjAxOCAyMDowNTozMiAtMDcwMCAoUERUKQpYLUdvb2dsZS1TbXRwLVNvdXJjZTogQUc0N0VMc0R4Z0VkTVdUcUl0enBMVXlJOG9MQ1N0SG8zY1J6b20xQVM4eXdJYjV2Wll3Y0o5MnVJc3k0MVJzRDN2UHl4YjhPYmFMQwpYLVJlY2VpdmVkOiBieSAxMC4xMDEuNjQuMTAgd2l0aCBTTVRQIGlkIGYxMG1yMjI4MzEyMnBncC4xNzEuMTUyMDk5NjczMjY4NjsKICAgICAgICBUdWUsIDEzIE1hciAyMDE4IDIwOjA1OjMyIC0wNzAwIChQRFQpCkFSQy1TZWFsOiBpPTE7IGE9cnNhLXNoYTI1NjsgdD0xNTIwOTk2NzMyOyBjdj1ub25lOwogICAgICAgIGQ9Z29vZ2xlLmNvbTsgcz1hcmMtMjAxNjA4MTY7CiAgICAgICAgYj1QdytPY01oWHJFNTVLaDJnWVRGaXhsZmZpZGNCeHY3U00weVlCcTFwUjJXNVlzZXVGY3cySXdiR2JWeDFIcjZjWDQKICAgICAgICAgSlRsUDVyT3NTeGU3eHlVMExoelQ2aHNMZFpTM285Q1ZKa0l0N2IwVXRaS1VKcGU1WnRHWVM4UXlkN3lqQ2JsdmZhT3kKICAgICAgICAgZzF2ZnhnMElhSzFoUVRQWjd6eU4wdE9BaytaYytib04wOTU4bjZCWUt6K1d4QmJMQ0p2L1VSSE1sZVJrQ21UMHJEQisKICAgICAgICAgZFlGQ1MrMWhIVjNDL0Voemk3MS9WNHJJdHNGSXIwbWxETTVESisrUzhER2Y2QVRoeDN2ckFaWDErbGlETnhhSmZYQmYKICAgICAgICAgcEh4TUxicUtPK1BSOUtTS1NFY2tJWXM1VmpXakpqU0NNbjNoODhJYTNzTVdPblpram14YTJPQ1pWbWxVV1hXano4ZGIKICAgICAgICAgWUM0UT09CkFSQy1NZXNzYWdlLVNpZ25hdHVyZTogaT0xOyBhPXJzYS1zaGEyNTY7IGM9cmVsYXhlZC9yZWxheGVkOyBkPWdvb2dsZS5jb207IHM9YXJjLTIwMTYwODE2OwogICAgICAgIGg9dG86c3ViamVjdDptZXNzYWdlLWlkOmRhdGU6ZnJvbTptaW1lLXZlcnNpb24KICAgICAgICAgOmFyYy1hdXRoZW50aWNhdGlvbi1yZXN1bHRzOwogICAgICAgIGJoPUhRVUIxM3llM08yR0phRFFCWERYQmRlODgrbm5zKzFoV1UwN2dQdjNkSUE9OwogICAgICAgIGI9UXlyRS8xbytkNGdweDBVU1hDZHJ0WVM1R29jVldYQVo1MXBJMXF5R2JFSzdMWUJ4d0dMMm9OWEFNdjFuZmNIZDFHCiAgICAgICAgIG83Z3I2bVoxY1IyMWpNQWF5a0dnZTloUnVtZkFIekFQVUNKb2pEV1M4Mi8yVHdJVDcyRVhJMkZzTGl4L3lmOXJvSFRaCiAgICAgICAgIDdQWDRiSzI2UU11TVUzLzFaK1pTSDZtYlphUzVreWRIVU5qbGIwa0IwSFBzdWw0a09FRFBmODR5K2JJTExjQTFJWGVyCiAgICAgICAgIEdrSVBmb0hyN0YxYjlneVB5emtFV2w0cFVNZGYvYXJYOHpYeWc5VnZWNXU3QytMcWwza1VDOFpmQlc0UHlqVnIzM2tzCiAgICAgICAgIGRwazZ4TjFVeG1QbjlDYU41R2Z3R2cvQmRuTnJOb1h0cDFBNUdtSEJ1bjRRZ1MzQkhweGoxUDI3NiswelQvNkJ4ZG5iCiAgICAgICAgIFBjQ1E9PQpBUkMtQXV0aGVudGljYXRpb24tUmVzdWx0czogaT0xOyBteC5nb29nbGUuY29tOwogICAgICAgc3BmPXBhc3MgKGdvb2dsZS5jb206IGRvbWFpbiBvZiBqX21hbnNoYWRAc2Z1LmNhIGRlc2lnbmF0ZXMgMTQyLjU4LjEwMS4xMSBhcyBwZXJtaXR0ZWQgc2VuZGVyKSBzbXRwLm1haWxmcm9tPWpfbWFuc2hhZEBzZnUuY2EKUmV0dXJuLVBhdGg6IDxqX21hbnNoYWRAc2Z1LmNhPgpSZWNlaXZlZDogZnJvbSBwb2JveDEuZjVlc3guc2Z1LmNhIChsb2FkLWJhbGFuY2VyLnNmdS5jYS4gWzE0Mi41OC4xMDEuMTFdKQogICAgICAgIGJ5IG14Lmdvb2dsZS5jb20gd2l0aCBFU01UUFMgaWQgZDlzaTEyODAzNDVwZmIuMjMyLjIwMTguMDMuMTMuMjAuMDUuMzIKICAgICAgICBmb3IgPGNzc3Mud2Vic2l0ZUBnbWFpbC5jb20+CiAgICAgICAgKHZlcnNpb249VExTMV8yIGNpcGhlcj1FQ0RIRS1SU0EtQUVTMTI4LUdDTS1TSEEyNTYgYml0cz0xMjgvMTI4KTsKICAgICAgICBUdWUsIDEzIE1hciAyMDE4IDIwOjA1OjMyIC0wNzAwIChQRFQpClJlY2VpdmVkLVNQRjogcGFzcyAoZ29vZ2xlLmNvbTogZG9tYWluIG9mIGpfbWFuc2hhZEBzZnUuY2EgZGVzaWduYXRlcyAxNDIuNTguMTAxLjExIGFzIHBlcm1pdHRlZCBzZW5kZXIpIGNsaWVudC1pcD0xNDIuNTguMTAxLjExOwpBdXRoZW50aWNhdGlvbi1SZXN1bHRzOiBteC5nb29nbGUuY29tOwogICAgICAgc3BmPXBhc3MgKGdvb2dsZS5jb206IGRvbWFpbiBvZiBqX21hbnNoYWRAc2Z1LmNhIGRlc2lnbmF0ZXMgMTQyLjU4LjEwMS4xMSBhcyBwZXJtaXR0ZWQgc2VuZGVyKSBzbXRwLm1haWxmcm9tPWpfbWFuc2hhZEBzZnUuY2EKUmVjZWl2ZWQ6IGZyb20gbWFpbC1sZjAtZjQzLmdvb2dsZS5jb20gKG1haWwtbGYwLWY0My5nb29nbGUuY29tIFsyMDkuODUuMjE1LjQzXSkKCShhdXRoZW50aWNhdGVkIGJpdHM9MCkKCWJ5IHBvYm94MS5mNWVzeC5zZnUuY2EgKDguMTQuOS84LjE0LjQvU0ZVLTcuMEcpIHdpdGggRVNNVFAgaWQgdzJFMzVWdVYwMDk1MDcKCSh2ZXJzaW9uPVRMU3YxL1NTTHYzIGNpcGhlcj1BRVMyNTYtR0NNLVNIQTM4NCBiaXRzPTI1NiB2ZXJpZnk9Tk9UKQoJZm9yIDxjc3NzLndlYnNpdGVAZ21haWwuY29tPjsgVHVlLCAxMyBNYXIgMjAxOCAyMDowNTozMiAtMDcwMApSZWNlaXZlZDogYnkgbWFpbC1sZjAtZjQzLmdvb2dsZS5jb20gd2l0aCBTTVRQIGlkIHcxNi12NnNvMjQ3NzIzMmxmYy4xMwogICAgICAgIGZvciA8Y3Nzcy53ZWJzaXRlQGdtYWlsLmNvbT47IFR1ZSwgMTMgTWFyIDIwMTggMjA6MDU6MzIgLTA3MDAgKFBEVCkKWC1HbS1NZXNzYWdlLVN0YXRlOiBBRWxSVDdHWDhyekdUL2NEanl6cDFpd1pvcXgycTdzdjdVTDVLSUtNNlp2OWxEMGFOV2dRZE9kQQoJZFhoWHJWaUljZjRMcEVCWXJmTGRrd2tRWmtxRExkSWhzZFZBTXk0PQpYLVJlY2VpdmVkOiBieSAyMDAyOmExOTozODE2Ojogd2l0aCBTTVRQIGlkIGYyMi12Nm1yMjIwOTcyNGxmYS4xMDkuMTUyMDk5NjczMDg3OTsKIFR1ZSwgMTMgTWFyIDIwMTggMjA6MDU6MzAgLTA3MDAgKFBEVCkKTUlNRS1WZXJzaW9uOiAxLjAKUmVjZWl2ZWQ6IGJ5IDEwLjQ2LjM0LjE5NyB3aXRoIEhUVFA7IFR1ZSwgMTMgTWFyIDIwMTggMjA6MDU6MzAgLTA3MDAgKFBEVCkKRnJvbTogSmFjZSBNYW5zaGFkaSA8al9tYW5zaGFkQHNmdS5jYT4KRGF0ZTogVHVlLCAxMyBNYXIgMjAxOCAyMDowNTozMCAtMDcwMApYLUdtYWlsLU9yaWdpbmFsLU1lc3NhZ2UtSUQ6IDxDQUo1U1F2MXBLczZLRC1aMXNXdnBtMVg0NnltNk9wdmhUTERSNnZTVCthTzVNUVNFQ1FAbWFpbC5nbWFpbC5jb20+Ck1lc3NhZ2UtSUQ6IDxDQUo1U1F2MXBLczZLRC1aMXNXdnBtMVg0NnltNk9wdmhUTERSNnZTVCthTzVNUVNFQ1FAbWFpbC5nbWFpbC5jb20+ClN1YmplY3Q6IHRoaXJkIGVtYWlsClRvOiBjc3NzLndlYnNpdGVAZ21haWwuY29tCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2FsdGVybmF0aXZlOyBib3VuZGFyeT0iMDAwMDAwMDAwMDAwZDk0ODg1MDU2NzU2YTUwNCIKWC1BdXRoZW50aWNhdGVkLVVzZXI6IGpzYWFkYXRtCgotLTAwMDAwMDAwMDAwMGQ5NDg4NTA1Njc1NmE1MDQKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PSJVVEYtOCIKCmZyb20gamFjZUJheUJheQotSmFjZSBNYW5zaGFkaQozMDEyNjk3NjMKCi0tMDAwMDAwMDAwMDAwZDk0ODg1MDU2NzU2YTUwNApDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD0iVVRGLTgiCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFibGUKCjxkaXYgZGlyPTNEImx0ciI+ZnJvbSBqYWNlQmF5QmF5PGJyIGNsZWFyPTNEImFsbCI+PGRpdj48ZGl2IGNsYXNzPTNEImdtYWlsXz0Kc2lnbmF0dXJlIiBkYXRhLXNtYXJ0bWFpbD0zRCJnbWFpbF9zaWduYXR1cmUiPjxkaXYgZGlyPTNEImx0ciI+PGRpdj48ZGl2IGRpPQpyPTNEImx0ciI+PGRpdj48ZGl2IGRpcj0zRCJsdHIiPjxkaXYgZGlyPTNEImx0ciI+PGRpdiBkaXI9M0QibHRyIj48ZGl2IGRpcj0KPTNEImx0ciI+PGRpdiBkaXI9M0QibHRyIj48ZGl2IGRpcj0zRCJsdHIiPjxkaXYgZGlyPTNEImx0ciI+PGRpdj48ZGl2IGRpcj0KPTNEImx0ciI+LUphY2UgTWFuc2hhZGk8L2Rpdj48ZGl2IGRpcj0zRCJsdHIiPjMwMTI2OTc2MzwvZGl2PjwvZGl2PjxkaXY+PC9kPQppdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj49CjwvZGl2Pgo8L2Rpdj4KCi0tMDAwMDAwMDAwMDAwZDk0ODg1MDU2NzU2YTUwNC0tCg=='

# python3 manage.py dbshell
#SELECT body FROM django_mailbox_message WHERE id == 7;

decoded_body= base64.b64decode(body)
decoded = str(decoded_body)
#print(decoded)
indexOfFirst=decoded.index("UTF-8")
indexOfLast = decoded.index("--000000000000d94885056756a504\\nContent-Type: text/html")
print("indexOfFirst=["+str(indexOfFirst)+"] indexOfLast+["+str(indexOfLast)+"] -- indexOfFirst-indexOfLast=["+str(indexOfFirst-indexOfLast)+"] -- length=["+str(len(decoded))+"]")
print(decoded[indexOfFirst+8:indexOfLast].replace('\\n', '\n'))


sqlite3 db.sqlite3
sqlite> SHOW * FROM django_mailbox_mailbox
sqlite> SELECT * FROM django_mailbox_mailbox ;
sqlite> SELECT * FROM django_mailbox_message ;
sqlite> .tables

sqlite> PRAGMA table_info(django_mailbox_message)
sqlite> SELECT subject FROM django_mailbox_message;
sqlite> SELECT from_header FROM django_mailbox_message;
sqlite> SELECT to_header FROM django_mailbox_message;
sqlite> SELECT body FROM django_mailbox_message;
sqlite> SELECT body FROM django_mailbox_message WHERE id == 1;
